set -g base-index 1
set -g mouse on


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Change prefix to ctrl+space
set -g prefix C-space
unbind-key C-b
bind-key C-space send-prefix

# Vi-style copy/pasting
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi escape send '^C'
bind-key -T command-mode escape send '^C'

# Vi-style window navigation
bind-key h previous-window
bind-key j previous-window
bind-key k next-window
bind-key l next-window
bind-key C-h previous-window
bind-key C-j previous-window
bind-key C-k next-window
bind-key C-l next-window

# Command Prompt
bind-key \; command-prompt

# Scrolling
bind space copy-mode
bind C-space copy-mode

# Splits
bind \ split-window -h
bind | split-window -h
bind - split-window -v

# Source
bind-key r source-file ~/.tmux.conf

# Neovim escape
set-option -sg escape-time 0

# Status line
set-option -g status-justify right
set-option -g status-bg black
set-option -g status-fg cyan
set-option -g status-interval 10
set-option -g status-left-length 30
set-option -g status-left '#[fg=white,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][#(git branch)] #[fg=cyan]#[fg=blue,bold]###S #[fg=magenta]%m/%d %I:%M%p#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
